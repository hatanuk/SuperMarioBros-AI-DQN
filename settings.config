[NeuralNetwork]
input_dims = (4, 7, 10)  # (start_row, width, height) where width and height are in number of tiles
hidden_layer_architecture = (9)
hidden_node_activation = relu
output_node_activation = sigmoid
encode_row = True

[NeuralNetworkDQN]
input_dims = (4, 7, 10) 
hidden_layer_architecture = (9)
hidden_node_activation = relu
output_node_activation = linear
encode_row = True
learning_rate = 0.01



[Mutation]
mutation_rate = 0.05  # Value must be between [0.00, 1.00)
mutation_rate_type = static
gaussian_mutation_scale = 0.2  # The amount to multiple by the guassian(0, 1) value by

[Crossover]
probability_sbx = 1.0
sbx_eta = 100
crossover_selection = roulette
tournament_size = 5

[Selection]
#num_parents = 200
#num_offspring = 1000
num_parents = 10
num_offspring = 90
selection_type = comma
lifespan = inf

[Misc]
level = 1-1
allow_additional_time_for_flagpole = True