[Graphics]
tile_size = (10, 10)  # Tile size in pixels in the (X, Y) direction
neuron_radius = 8

[Statistics]
save_best_individual_from_generation = /path/to/save/individuals
save_population_stats = /path/to/save/stats.csv

# For saving DQN Models
dqn_save_dir = ./DQNModels
dqn_model_name = DQNtest1

# Stable baselines environment logger
monitor_dir = ./monitor_logs

# Tensorboard logging
tensorboard_dir = ./monitor_logs/tb

# Every how many steps to log progress in Tensorboard
log_interval = 100

[NeuralNetworkGA]
input_dims = (4, 7, 10)  # (start_row, width, height) where width and height are in number of tiles
hidden_layer_architecture = (9)
hidden_node_activation = relu
output_node_activation = sigmoid
encode_row = True

[NeuralNetworkDQN]
input_dims = (4, 7, 10) 
hidden_layer_architecture = (9)
hidden_node_activation = relu
output_node_activation = linear
encode_row = True

[DQN]
learning_rate = 0.01
discount_value = 0.99  
train_freq = 4
total_episodes = 2000


# Target network settings
sync_network_rate = 500  

# Replay experience buffer settings
batch_size = 128        
buffer_size = 100000

# Tune this to adjust exploration
epsilon_start = 0.7
epsilon_min = 0.988
epsilon_decay = 0.99

[GA]
total_generations = 2000
parallel_processes = 10

[Mutation]
mutation_rate = 0.05  # Value must be between [0.00, 1.00)
mutation_rate_type = static
gaussian_mutation_scale = 0.2  # The amount to multiple by the guassian(0, 1) value by

[Crossover]
probability_sbx = 1.0
sbx_eta = 100
crossover_selection = roulette
tournament_size = 5

[Selection]
num_parents = 5
num_offspring = 20
selection_type = comma
lifespan = inf

[Misc]
level = 1-1
allow_additional_time_for_flagpole = True
