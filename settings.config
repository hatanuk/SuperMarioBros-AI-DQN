[Graphics]
tile_size = (10, 10)  # Tile size in pixels in the (X, Y) direction
neuron_radius = 8

[Environment]
level = 1-1
frame_skip = 4 # Each action will be repeated for frame_skip frames
 
[Statistics]
# A model .pt file contains:
#  'iterations' # Number of episodes/generations 
#  'distance' # Level distance covered by agent
#   'encode_row' # As specified in the config
#   'input_dims # As specified in the config
#   'state_dict' # PyTorch weights and biases
#   'layer_sizes' # tuple of input, hidden and output layer node sizes
#   'hidden_activation' # string of named activation function
#   'output_activation' # string of named activation function
    
# .pt files will be saved at model_save_dir/DQN or model_save_dir/GA respectively
# WARNING: THIS WILL CLEAR ALL EXISTING FILES WITHIN THIS DIRECTORY
model_save_dir = ./models

# GA save config
ga_model_name = GAbest
top_x_individuals = 3 # How many of the highest-fitness individuals to save out of a generation
ga_checkpoint_interval = 1000

# DQN save config
dqn_model_name = DQNbest
dqn_checkpoint_interval = 1000


# Tensorboard logging
tensorboard_dir = ./logs/tb

# Every how many steps to log progress in Tensorboard
log_interval = 1

[NeuralNetworkGA]
input_dims = (4, 7, 10)  # (start_row, width, height) where width and height are in number of tiles
hidden_layer_architecture = (9)
hidden_node_activation = relu
output_node_activation = sigmoid
encode_row = True

[NeuralNetworkDQN]
input_dims = (4, 7, 10) 
hidden_layer_architecture = (32, 32)
hidden_node_activation = relu
output_node_activation = linear # Only a linear activation is ever used during training to preserve Q-values
encode_row = True

[DQN]
learning_rate = 0.001
discount_value = 0.99  
train_freq = 4
total_episodes = 10000

# Target network settings
sync_network_rate = 5000

# Replay experience buffer settings
batch_size = 32
buffer_size = 10000

# Tune this to adjust exploration (linear epsilon decay)
epsilon_start = 0.8
epsilon_min = 0.1
decay_fraction = 0.001

[GA]
total_generations = 10000
parallel_processes = 10

[Mutation]
mutation_rate = 0.05  # Value must be between [0.00, 1.00)
mutation_rate_type = static
gaussian_mutation_scale = 0.2  # The amount to multiple by the guassian(0, 1) value by

[Crossover]
probability_sbx = 1.0
sbx_eta = 100
crossover_selection = roulette
tournament_size = 5

[Selection]
num_parents = 5
num_offspring = 20
selection_type = comma
lifespan = inf

[Misc]
allow_additional_time_for_flagpole = True

